
data List(a) =
    | Nil
    | Cons(a, List(a))

map : forall a b. (a -> b, List(a)) -> List(b)
map(f, list) = match list {
   Nil -> Nil
   Cons(x, xs) -> Cons(f(x), map(f,xs))
}

main : () -> ()
main() = {
    let list = map(\x -> x, Cons(1,Cons(2,Cons(3,Nil))))
    ()
}

